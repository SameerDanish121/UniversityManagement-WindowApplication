<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox10.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAABFJJREFUaEPtmWuoVFUYho9aaqFGtx8hhlZQJHTPKIQiKgSJqD/dIUKsfqQUUUIp
        UgaCBNEF6lckBVZQVErUjy52NSqIQpEuUpHdsyIKun09717vsjkdZ86sObH3DuaBlzPzru/71jdnZs9a
        s/bIkCH/EyJiClqIbkD3oUfRBnQnugjt69B2QoPT0I3oC9SLL9Fip7ULGpuH3leX5m10F9K7cgnSO3ET
        egWJ39AD6GyXaB6aORh9gsQb6EQP7RHGV1WR//A0muXh5qCJR6p2Il5A02x3hZhJaC5aij5HYqOHm4EG
        DkN/oV/REbb7hpxD0XdILLJdP0y+LPUQD9kqhtzVqcTgNSYMkz+ZeohLbRVD7jGpRGy1VT9MviX10PsC
        7wW5U9Ef6Hc0xXa9MPEHSBRfH52Qr69jMdVWvTDxtjR/HG6rGHK1E/jTauwd2YzEqbaKIXdOKhE7bdUP
        k2sfJS6wVQy5Z6US8ZKt+mHylamHuNVWMeSuSSVija36YfLFqYd4xlYx5L6aSsQ5tuqHyc9PPVSr8yTb
        fUPOQSh/Yy20XT9Mrk2iuMZWEeTthW6rKkQ8bLt+mDzvegdeR8g9LZWIzbbqh8k3pR7iMlvFkHt1KhHr
        bdUPk1+Veogd6DrbfUPOLehTFYCB92sThsn3RnnjuM12XxCvFf1HpJ8Bj+m5h5qBBvRDSd9a2mIcaHtc
        iD0ZiXdtNQ/NPJF6iuW2xoXYu1NKrLPVPDRzbuopPkMzbHeFmNnoZyXAfNvNQzOT0etVWxFPoekeGgNj
        +6OXFQgbbLcHmjoK/VK1F3GI7TEwdkIKia9R17hGobGdVYu9X8ixKSTes9U+aC4f78y2NQbGjk4hsd1W
        +6C5n1KP1dpypO3dyEM6kBM7bLcLGtN/WotbRrvae5BOIiU9zjtdoetpjtPbAQ1p4/exuoP16H6kkxHx
        gyV0UqIT+rwb2I5OcZnmoImT0INIq7p4Dc302Hy0S6b5HlVrBn8PQG/KBOXqxS/QWG0woW4fXI7ymVYn
        yxymuBXJGsUKD2s8n1J2ohd3Beq6Dk0Yis9Aau4rlNEeax26vnqWroEz0CKUP1qdyNOYYvL1olzV+LZ6
        lvgG3Yyqd/c/gWJata918cxb6Eq0j8MUt1YDoDh9jMQd6B1Lj4XGcq21Tlf+dKR3o/Od1otbjiY7bDAo
        MAs9izI6xzrTw6PA1wvW9iTzONJP2a2WHsvLKHaPDeKfjl5UkHkO7efhMkjUfyjvn3S77DwPdYWYmUi/
        4yU9vhBlLkajxp3WFWK0Gc238pSz+xPQNyTpe198hObaLoK856sKiYEO4MjTPZQPqwoR99ruDxK0Aus7
        Xxfn8baLIE93pToXSD2e5+EiyDsO5RP7MTuGrhB8OxKbbBVD7pJUYhRLPVwMuRtTiYITSYLzYrXEVjHk
        apH7NxO5s5X/MVtsjQ/BnSty29jlNntDoFbutjPu3eMhQ4Z0MjLyN355sE9944YtAAAAAElFTkSuQmCC
</value>
  </data>
</root>